{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b39681f7106a37c333713f270f508b89c87c1e8267920e933b7fb9d25d42e2cffae8db80f4e2557e12ffb5bb0113aa303ff13a05a18cb00c82875f72cbbfad09",
            "file": "projects/ui-kit-components/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ButtonSize",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ButtonVariant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ntype ButtonVariant = 'primary' | 'secondary' | 'success' | 'danger' | 'details';\ntype ButtonSize = 'sm' | 'md' | 'lg';\n\n@Component({\n  selector: 'lib-button',\n  imports: [CommonModule],\n  standalone: true,\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss'\n})\nexport class ButtonComponent implements OnInit {\n  @Input() variant: ButtonVariant = 'primary';\n  @Input() size: ButtonSize = 'md';\n  @Input() disabled: boolean = false;\n  @Input() loading: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // Initialization logic if needed\n  }\n\n  get buttonClasses(): { [key: string]: boolean } {\n    return {\n      [`lib-button--${this.variant}`]: true,\n      [`lib-button--${this.size}`]: true,\n    };\n  }\n\n}\n",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "buttonClasses": {
                    "name": "buttonClasses",
                    "getSignature": {
                        "name": "buttonClasses",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 26
                    }
                }
            },
            "templateData": "<button [ngClass]=\"buttonClasses\" [disabled]=\"disabled\">\n    <ng-content></ng-content>\n    <span *ngIf=\"loading\" class=\"loader\"></span>\n</button>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AllVariantsAndSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n        <style>\n            /* Local styles for this specific story to arrange buttons in a grid */\n            .button-grid {\n                display: grid;\n                grid-template-columns: repeat(4, auto); /* 4 columns: Variant label, then sm, md, lg buttons */\n                gap: var(--space-md) var(--space-lg); /* Uses your semantic spacing tokens */\n                align-items: center;\n                padding: var(--space-lg); /* Padding around the grid */\n                background-color: var(--color-surface-alt); /* Uses a semantic color token */\n                border-radius: var(--border-radius-md); /* Uses a semantic border radius token */\n            }\n            .button-grid h4 {\n                margin: 0;\n                padding: 0;\n                text-align: right;\n                padding-right: var(--space-md);\n                font-weight: var(--font-weight-semibold); /* Uses a semantic font weight token */\n                color: var(--color-text-default); /* Uses a semantic text color token */\n            }\n        </style>\n        <div class=\"button-grid\">\n            <h4>Primary</h4>\n            <lib-button variant=\"primary\" size=\"sm\">Primary Small</lib-button>\n            <lib-button variant=\"primary\" size=\"md\">Primary Medium</lib-button>\n            <lib-button variant=\"primary\" size=\"lg\">Primary Large</lib-button>\n\n            <h4>Secondary</h4>\n            <lib-button variant=\"secondary\" size=\"sm\">Secondary Small</lib-button>\n            <lib-button variant=\"secondary\" size=\"md\">Secondary Medium</lib-button>\n            <lib-button variant=\"secondary\" size=\"lg\">Secondary Large</lib-button>\n\n            <h4>Success</h4>\n            <lib-button variant=\"success\" size=\"sm\">Success Small</lib-button>\n            <lib-button variant=\"success\" size=\"md\">Success Medium</lib-button>\n            <lib-button variant=\"success\" size=\"lg\">Success Large</lib-button>\n\n            <h4>Loading</h4>\n            <lib-button variant=\"primary\" size=\"md\" [loading]=\"true\">Loading</lib-button>\n            <lib-button variant=\"details\" size=\"md\" [loading]=\"true\">Loading Details</lib-button>\n        </div>\n    `,\n    props: {}\n  }),\n  parameters: {\n    controls: { hideNoControlsWarning: true, exclude: ['variant', 'size', 'disabled'] },\n  },\n}"
            },
            {
                "name": "CustomContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n        </svg>\n        <span>Button with Icon</span>\n      </lib-button>\n    `,\n  }),\n  args: {\n    variant: 'secondary',\n    size: 'md',\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Disabled Button</lib-button>`,\n  }),\n  args: { disabled: true },\n}"
            },
            {
                "name": "LargeButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Large Button</lib-button>`,\n  }),\n  args: { size: 'lg' },\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Loading Button</lib-button>`,\n  }),\n  args: { loading: true },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n\n  decorators: [], \n\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'success', 'loading'],\n      description: \"Defines the button's visual style based on its intended action.\",\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n      description: \"Defines the button's size (small, medium, large).\",\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'When true, the button will be non-interactive and appears visually disabled.',\n    },\n    loading: {\n      control: 'boolean',\n      description: 'When true, the button will display a loading indicator.',\n    },\n  },\n  args: {\n    size: 'md',\n    disabled: false,\n    loading: false,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Primary Button</lib-button>`,\n  }),\n  args: { variant: 'primary' },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Secondary Button</lib-button>`,\n  }),\n  args: { variant: 'secondary' },\n}"
            },
            {
                "name": "SmallButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Small Button</lib-button>`,\n  }),\n  args: { size: 'sm' },\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Success Button</lib-button>`,\n  }),\n  args: { variant: 'success' },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/ui-kit-components/src/lib/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"details\"",
                "file": "projects/ui-kit-components/src/lib/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ui-kit-components/src/stories/components/button.stories.ts": [
                {
                    "name": "AllVariantsAndSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n        <style>\n            /* Local styles for this specific story to arrange buttons in a grid */\n            .button-grid {\n                display: grid;\n                grid-template-columns: repeat(4, auto); /* 4 columns: Variant label, then sm, md, lg buttons */\n                gap: var(--space-md) var(--space-lg); /* Uses your semantic spacing tokens */\n                align-items: center;\n                padding: var(--space-lg); /* Padding around the grid */\n                background-color: var(--color-surface-alt); /* Uses a semantic color token */\n                border-radius: var(--border-radius-md); /* Uses a semantic border radius token */\n            }\n            .button-grid h4 {\n                margin: 0;\n                padding: 0;\n                text-align: right;\n                padding-right: var(--space-md);\n                font-weight: var(--font-weight-semibold); /* Uses a semantic font weight token */\n                color: var(--color-text-default); /* Uses a semantic text color token */\n            }\n        </style>\n        <div class=\"button-grid\">\n            <h4>Primary</h4>\n            <lib-button variant=\"primary\" size=\"sm\">Primary Small</lib-button>\n            <lib-button variant=\"primary\" size=\"md\">Primary Medium</lib-button>\n            <lib-button variant=\"primary\" size=\"lg\">Primary Large</lib-button>\n\n            <h4>Secondary</h4>\n            <lib-button variant=\"secondary\" size=\"sm\">Secondary Small</lib-button>\n            <lib-button variant=\"secondary\" size=\"md\">Secondary Medium</lib-button>\n            <lib-button variant=\"secondary\" size=\"lg\">Secondary Large</lib-button>\n\n            <h4>Success</h4>\n            <lib-button variant=\"success\" size=\"sm\">Success Small</lib-button>\n            <lib-button variant=\"success\" size=\"md\">Success Medium</lib-button>\n            <lib-button variant=\"success\" size=\"lg\">Success Large</lib-button>\n\n            <h4>Loading</h4>\n            <lib-button variant=\"primary\" size=\"md\" [loading]=\"true\">Loading</lib-button>\n            <lib-button variant=\"details\" size=\"md\" [loading]=\"true\">Loading Details</lib-button>\n        </div>\n    `,\n    props: {}\n  }),\n  parameters: {\n    controls: { hideNoControlsWarning: true, exclude: ['variant', 'size', 'disabled'] },\n  },\n}"
                },
                {
                    "name": "CustomContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n        </svg>\n        <span>Button with Icon</span>\n      </lib-button>\n    `,\n  }),\n  args: {\n    variant: 'secondary',\n    size: 'md',\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Disabled Button</lib-button>`,\n  }),\n  args: { disabled: true },\n}"
                },
                {
                    "name": "LargeButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Large Button</lib-button>`,\n  }),\n  args: { size: 'lg' },\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Loading Button</lib-button>`,\n  }),\n  args: { loading: true },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n\n  decorators: [], \n\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'success', 'loading'],\n      description: \"Defines the button's visual style based on its intended action.\",\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n      description: \"Defines the button's size (small, medium, large).\",\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'When true, the button will be non-interactive and appears visually disabled.',\n    },\n    loading: {\n      control: 'boolean',\n      description: 'When true, the button will display a loading indicator.',\n    },\n  },\n  args: {\n    size: 'md',\n    disabled: false,\n    loading: false,\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Primary Button</lib-button>`,\n  }),\n  args: { variant: 'primary' },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Secondary Button</lib-button>`,\n  }),\n  args: { variant: 'secondary' },\n}"
                },
                {
                    "name": "SmallButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Small Button</lib-button>`,\n  }),\n  args: { size: 'sm' },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `<lib-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Success Button</lib-button>`,\n  }),\n  args: { variant: 'success' },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ui-kit-components/src/lib/button/button.component.ts": [
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/ui-kit-components/src/lib/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"details\"",
                    "file": "projects/ui-kit-components/src/lib/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ui-kit-components/src/stories/components/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ui-kit-components/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/lib/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/lib/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariantsAndSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ui-kit-components/src/stories/components/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}